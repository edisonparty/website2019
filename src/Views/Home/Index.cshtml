@using Web.Models
@model IEnumerable<Web.Models.Participant>

@{
    ViewData["Title"] = "Home Page";
}
@section Visitors {
	<p>Currently there are @Model.Count() visitors registered.</p>
	<table class="visitors">
		<tr>
			<th>#</th>
			<th>Handle / Group</th>
			<th>Enclave</th>
		</tr>
	@{ int count = 1; }
	
	@foreach (var visitor in Model) {
		<tr>
			<td>@(count++)</td>
			<td>
				@Html.DisplayFor(model => visitor.Handle)
				@{ 
					if (visitor.Group != "")
					{
						@:/ @Html.DisplayFor(model => visitor.Group)
					}
					
				}
			</td>
			<td>
				@{
					if (visitor.Country != "")
					{
						@Html.DisplayFor(model => visitor.Country)
					}
				}
			</td>
		</tr>
	}
	</table>
}

@section Registration {
	@await Html.PartialAsync("~/Views/Home/Register.cshtml", new Web.Models.Participant())
}

@section Compos {
	@await Html.PartialAsync("~/Views/Home/Compos.cshtml")
}

@section Slack {
	@await Html.PartialAsync("~/Views/Home/Slack.cshtml", new Web.Models.SlackInviteRequest())
}
@section scripts {
	@await Html.PartialAsync("~/Views/Home/Map.cshtml")
}

